{
    "version": "https://jsonfeed.org/version/1",
    "title": "乌弥的小屋 • All posts by \"dom\" tag",
    "description": "乌弥的个人博客",
    "home_page_url": "https://www.umi.homes",
    "items": [
        {
            "id": "https://www.umi.homes/posts/c8f1/",
            "url": "https://www.umi.homes/posts/c8f1/",
            "title": "事件初步",
            "date_published": "2022-11-12T08:10:35.000Z",
            "content_html": "<h2 id=\"事件基础\"><a class=\"markdownIt-Anchor\" href=\"#事件基础\">#</a> 事件基础</h2>\n<h3 id=\"事件简介\"><a class=\"markdownIt-Anchor\" href=\"#事件简介\">#</a> 事件简介</h3>\n<h4 id=\"常见事件\"><a class=\"markdownIt-Anchor\" href=\"#常见事件\">#</a> 常见事件</h4>\n<p><strong>事件</strong>是某事发生的信号，所有 DOM 节点都生成这样的信号。这是一些常见的 DOM 事件：</p>\n<ol>\n<li>\n<p>鼠标事件</p>\n<ul>\n<li><code>click</code> ：鼠标点击一个元素时</li>\n<li><code>contextmenu</code> ：鼠标右键点击一个元素时</li>\n<li><code>mouseover/mouseout</code> ：鼠标指针移入 / 离开一个元素时</li>\n<li><code>mousedown/mouseup</code> ：在元素上按下 / 释放鼠标时</li>\n<li><code>mousemove</code> ：鼠标移动时</li>\n</ul>\n</li>\n<li>\n<p>键盘事件</p>\n<ul>\n<li><code>keydown/keyup</code> ：按下和松开一个按键时</li>\n</ul>\n</li>\n<li>\n<p>表单元素</p>\n<ul>\n<li><code>submit</code> ：用户提交了一个 <code>&lt;form&gt;</code>  时</li>\n<li><code>focus</code> ：用户聚焦于一个元素时</li>\n</ul>\n</li>\n<li>\n<p>Document 事件</p>\n<ul>\n<li><code>DOMContentLoaded</code> ：在 HTML 被加载和处理完成时，DOM 被完全构建完成时</li>\n</ul>\n</li>\n<li>\n<p>CSS 事件</p>\n<ul>\n<li><code>transitioned</code> ：在一个 CSS 动画完成时</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"事件处理程序\"><a class=\"markdownIt-Anchor\" href=\"#事件处理程序\">#</a> 事件处理程序</h4>\n<p>处理程序可以对事件做出响应，在发生对应行为时运行相应的 JavaScript 代码。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 为 input 分配一个 click 处理程序，在 HTML 设置 on&lt;event > 特性 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Click me<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click!'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 当代码较多时，可以将其设置为函数 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">alertHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alertHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hello! * 3<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">&lt;!-- 通过 DOM 属性 on&lt;event > 的方式和直接设置 HTML 特性是相同的 --></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>elem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>click<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  elem<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>这两种方法中，一种是通过 HTML 特性初始化的，另一种是通过脚本初始化的，除此之外它们是相同。<br>\n因为只有一个 <code>onclick</code>  属性，设置 <code>onclick = null</code>  即可移除设置的处理程序。<br>\n在处理程序中 <code>this</code>  指向这个对应元素。</p>\n<p><code>addEventListener</code>  方法可以为一个事件分配多个处理程序。<br>\n <code>elem.addEventListener(event, handler[, options])</code> ：</p>\n<ul>\n<li><code>event</code> ：事件名</li>\n<li><code>handler</code> ：处理程序</li>\n<li><code>options</code> ：可选关键词\n<ul>\n<li><code>once</code> ：如果为 <code>true</code> ，那么在触发后自地删除监听器</li>\n<li><code>capture</code> ：事件处理阶段，冒泡或者捕获</li>\n<li><code>passive</code> ：如果为 <code>true</code> ，那么处理程序将不会被调用默认行为</li>\n</ul>\n</li>\n</ul>\n<p><code>elem.removeEventListener(event, handler[, options])</code>  移除添加的监听器</p>\n<div class=\"note info\">\n<p>移除时需要相同的函数，如果是使用箭头函数而没有将函数存储在变量中，则无法移除它。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>elem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 这样并不能移除函数，因为它们是不同的函数对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>elem<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<h4 id=\"事件对象\"><a class=\"markdownIt-Anchor\" href=\"#事件对象\">#</a> 事件对象</h4>\n<p>事件发生的时候，浏览器会创建一个 <code>event</code>  对象，将信息放入其中并传递给处理程序。<br>\n <code>event</code>  对象通常有这些属性：</p>\n<ul>\n<li><code>event.type</code> ：事件类型，如 <code>click</code></li>\n<li><code>event.currentTarget</code> ：处理事件的元素，这里与 <code>this</code>  相同</li>\n<li><code>event.clientX/event.clientY</code> ：指针事件的指针的窗口的相对坐标</li>\n</ul>\n<h3 id=\"冒泡与捕获\"><a class=\"markdownIt-Anchor\" href=\"#冒泡与捕获\">#</a> 冒泡与捕获</h3>\n<h4 id=\"冒泡\"><a class=\"markdownIt-Anchor\" href=\"#冒泡\">#</a> 冒泡</h4>\n<p>冒泡（bubbling）是指，<strong>当一个事件发生在元素上时，它会首先运行在该元素上的处理程序，然后在运行其父元素上的处理程序，然后一直向上直达其他祖先元素</strong>。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 这里有三层嵌套，它们各自拥有一个处理程序 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">&lt;!-- 先运行 p 上的，然后是 p 外的 div，然后是 div 外的 div，直到最后的 document 对象 --></span></pre></td></tr></table></figure><div onclick=\"alert('1')\" style=\"width:200px;height:160px;background:orange;\">\n    <div onclick=\"alert('2')\" style=\"margin:auto;width:160px;height:120px;background:yellow;transform:translateY(20px)\">\n        <p onclick=\"alert('3')\" style=\"margin:auto;width:120px;height:80px;background:green;transform:translateY(20px)\"></p>\n    </div>\n</div>\n<p>点击绿色的区域，将依次看见 3，2，1 三个 <code>alert</code> 。</p>\n<p>事件从内部元素 “冒泡” 到几乎所有父级，这个过程称为 “冒泡”。<br>\n冒泡事件从目标元素（ <code>event.target</code> ）开始向上，到 <code>&lt;html&gt;</code>  甚至 <code>window</code> ，它们会调用路径上的所有处理程序。<br>\n <code>event.stopPropagation()</code>  方法可以停止冒泡，但是如果一个元素在一个事件上有多个处理程序，即使其中一个停止冒泡，其他处理程序仍会执行。<br>\n冒泡带来了很多方便，阻止冒泡可能会导致一些意想不到的问题，<strong>除非有显而易见的需要，否则不应该随便停止冒泡</strong>。</p>\n<h4 id=\"捕获\"><a class=\"markdownIt-Anchor\" href=\"#捕获\">#</a> 捕获</h4>\n<p>捕获（capturing）是事件处理的另一个阶段。<br>\nDOM 事件标准中，事件传播有三个阶段，捕获阶段 - 目标阶段 - 冒泡阶段。<br>\n捕获阶段最先发生，事件向下走近元素，目标阶段事件到达元素，然后事件开始冒泡。<br>\n使用 <code>on&lt;event&gt;</code>  和 <code>addEventListener</code>  处理的事件仅在第二第三阶段进行。</p>\n<p>如果要在捕获阶段处理事件，需要将 <code>capture</code>  设置为 <code>true</code> ：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>elem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"事件委托\"><a class=\"markdownIt-Anchor\" href=\"#事件委托\">#</a> 事件委托</h3>\n<p>冒泡与委托结合，可以实现更灵活的事件处理模式 —— 事件委托。<br>\n事件委托模式可以用于为相似元素添加相同的处理，通常如下：</p>\n<ol>\n<li>在容器上放置一个处理程序</li>\n<li>在处理程序中，检查源元素 <code>event.target</code></li>\n<li>事件发生在目标元素上，处理事件</li>\n</ol>\n<div class=\"tab\" data-id=\"eventTab\" data-title=\"优点\">\n<ol>\n<li>简化初始化事件处理程序，节省内存</li>\n<li>添加移除元素时，无需修改处理程序</li>\n<li>方便 DOM 修改</li>\n</ol>\n</div>\n<div class=\"tab\" data-id=\"eventTab\" data-title=\"缺点\">\n<ol>\n<li>仅适用于可以冒泡的事件</li>\n<li>委托可能增加负载，因为容器级的处理程序会对容器内任意位置的事件都做出反应</li>\n</ol>\n</div>\n<p>一个事件委托的例子如下，事件处理程序并不是在每一个元素上添加的，而是在它们的父元素上：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token selector\">#container</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 340px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 340px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token selector\">.box</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>red<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>blue<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>yellow<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>orange<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>green<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>purple<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>pink<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>grey<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>darkred<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">let</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    container<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>className <span class=\"token operator\">==</span> <span class=\"token string\">\"box\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        color <span class=\"token operator\">==</span> <span class=\"token string\">\"white\"</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">=</span> box<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        box<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"默认行为\"><a class=\"markdownIt-Anchor\" href=\"#默认行为\">#</a> 默认行为</h3>\n<p>默认行为是指事件被触发时，浏览器自动执行的行为，例如：</p>\n<ul>\n<li>点击一个 <code>&lt;a&gt;</code>  标签，触发导航到该 URL</li>\n<li>点击表单提交按钮，触发提交到服务器行为</li>\n<li>文本上按下鼠标并移动，选中文本</li>\n</ul>\n<p>大部分情况下它们都很有用，但是少部分的场景可能并不希望浏览器的默认行为。<br>\n一种方法是 <code>on&lt;event&gt;=&quot;return false</code> ，它会阻止默认事件，如果事件由 <code>on&lt;event&gt;</code>  分配；<br>\n另一种方法是使用 <code>event</code>  对象，有一个 <code>event.preventDefault()</code>  方法。<br>\n <code>addListener</code>  方法中的 <code>passive: true</code>  选项告诉浏览器该行为不会被阻止。<br>\n如果默认行为被阻止， <code>event.defaultPrevented</code>  的值会变成 <code>true</code> ，否则为 <code>false</code> 。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>Click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>Click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"ui-事件\"><a class=\"markdownIt-Anchor\" href=\"#ui-事件\">#</a> UI 事件</h2>\n<h3 id=\"鼠标事件\"><a class=\"markdownIt-Anchor\" href=\"#鼠标事件\">#</a> 鼠标事件</h3>\n<h4 id=\"鼠标事件简介\"><a class=\"markdownIt-Anchor\" href=\"#鼠标事件简介\">#</a> 鼠标事件简介</h4>\n<ol>\n<li>\n<p>事件类型<br>\n在元素上点击 / 释放鼠标按钮： <code>mousedown/mouseup</code> <br>\n 鼠标指针从元素上移入 / 移出： <code>mouseover/mouseout</code> <br>\n 鼠标在元素上移动： <code>mousemove</code> <br>\n 鼠标左键点击元素，在 <code>mousedown</code>  和 <code>mouseup</code>  后触发 <code>click</code> <br>\n 鼠标右键按下触发上下文菜单： <code>contextmenu</code></p>\n<p>当一个用户操作会触发多个事件时，事件的顺序是固定的：如点击鼠标左键，会遵循 <code>mousedown</code> -&gt; <code>mouseup</code> -&gt; <code>click</code>  的顺序。</p>\n<p><code>event.button</code>  记录了鼠标按键的类型：</p>\n<table>\n<thead>\n<tr>\n<th>鼠标按键类型</th>\n<th><code>event.button</code>  的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>左键（主要按键）</td>\n<td>0</td>\n</tr>\n<tr>\n<td>中键（辅助按键）</td>\n<td>1</td>\n</tr>\n<tr>\n<td>右键（次要按键）</td>\n<td>2</td>\n</tr>\n<tr>\n<td>X1（后退按键）</td>\n<td>3</td>\n</tr>\n<tr>\n<td>X2（前进按键）</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>组合按键<br>\n所有鼠标事件都包含以下组合键的信息：<br>\n <code>shiftKey</code> ：shift 键<br>\n <code>altKey</code> ：alt 键<br>\n <code>ctrlKey</code> ：ctrl 键<br>\n <code>metaKey</code> ：windows 的 win 键和 mac 的 cmd 键</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alt + Shift + Click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 组合点击键，按下 alt+shift 键同时点击才生效 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  button<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>altKey <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>鼠标坐标<br>\n所有鼠标事件都提供了两种形式的坐标：<br>\n <code>clientX/clientY</code> ：相较于窗口的坐标<br>\n <code>pageX/pageY</code> ：相较于文档的坐标<br>\n<input onmousemove=\"this.value=event.clientX+':'+event.clientY\" value=\"\"></p>\n</li>\n<li>\n<p>防止鼠标选中<br>\n阻止浏览器的 <code>mousedown</code>  操作，可以防止双击时鼠标选中文本或者按下鼠标选中文本。</p>\n  <div onmousedown=\"return false\" style=\"font-style:italic\">这是一段鼠标按下或者双击不会选中的文字</div>\n<p>同样的，阻止 <code>copy</code>  事件也可以防止右键复制或者快捷键复制。</p>\n  <div oncopy=\"alert('禁止复制');return false\" style=\"font-style:italic\">这是一段禁止复制的文字</div>\n</li>\n</ol>\n<h4 id=\"移动鼠标\"><a class=\"markdownIt-Anchor\" href=\"#移动鼠标\">#</a> 移动鼠标</h4>\n<p>当鼠标移动到某个元素上时， <code>mouseover</code>  事件发生，鼠标离开这个元素时， <code>mouseout</code>  事件发生<br>\n这两个事件具备 <code>relatedTarget</code>  属性：</p>\n<ul>\n<li>在 <code>mouseover</code>  中，是鼠标来自的那个元素 <code>relatedTarget</code>  -&gt;  <code>target</code></li>\n<li>在 <code>mouseout</code>  中，是鼠标移动到的，当下的元素 <code>target</code>  -&gt;  <code>relatedTarget</code></li>\n</ul>\n<p>鼠标移动时会触发 <code>mouseover</code>  事件，但是并不是每一个像素变化都会触发。<br>\n浏览器会检测鼠标的位置，如果发生了变化就会触发事件，当访问者非常快速地移动鼠标时，某些 DOM 元素可能被跳过。<br>\n <code>mouseout</code>  事件在鼠标指针从元素移动到其后代时也触发（浏览器默认鼠标指针随时位于嵌套最多的那个单个元素上），而在后代中的 <code>mouseover</code>  事件还会冒泡，所以如果父元素有 <code>mouseover</code>  处理程序也会被触发。<br>\n在这种情况下，如果不检查 <code>event.target</code> ，似乎认为鼠标离开了父元素，但是鼠标此时仍然在父元素范围内，它只是更深入地指向了父元素中的子元素。</p>\n<p>有些时候为了阻止这种情况可以使用 <code>mouseenter</code>  和 <code>mouseleave</code> ：</p>\n<ul>\n<li>它们元素内部和后代之间的转换不会发生影响</li>\n<li>这两个事件不会冒泡</li>\n</ul>\n<p>鼠标进入一个元素，触发 <code>mouseenter</code> ，鼠标离开该元素，触发 <code>mouseleave</code> 。</p>\n<h4 id=\"鼠标拖拽\"><a class=\"markdownIt-Anchor\" href=\"#鼠标拖拽\">#</a> 鼠标拖拽</h4>\n<p>一个基础的拖拽算法如下：</p>\n<ol>\n<li>在 <code>mousedown</code>  上根据需要准备好要移动的元素</li>\n<li>在 <code>mouseover</code>  上通过更改 <code>position: absolute</code>  情况下的 <code>left/top</code>  来移动它</li>\n<li>在 <code>mouseup</code>  上执行与完成拖放相关行为</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 禁用浏览器默认拖拽处理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ball<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondragstart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ball<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousedown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 准备移动，设置为绝对定位，层级 z-index 最高保证在顶部</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">\"absolute\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>zIndex <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 将其从当前父元素移动到 body 中，保证定位是相对 body 的</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 现在球的中心在 (pageX,pageY) 坐标上</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">moveAt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pageX<span class=\"token punctuation\">,</span> pageY</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> pageX <span class=\"token operator\">-</span> ball<span class=\"token punctuation\">.</span>offsetWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> pageY <span class=\"token operator\">-</span> ball<span class=\"token punctuation\">.</span>offsetHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// 将绝对定位的球移到指针下</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">moveAt</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">onMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">moveAt</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 在 mousemove 事件上移动球</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> onMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">// 放下球并移除不需要的处理程序</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  ball<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> onMouseMove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    ball<span class=\"token punctuation\">.</span>onmouseup <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>优化：</p>\n<ol>\n<li>保持元素相对于鼠标指针的初始偏移：</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 访问者按下鼠标时，记住鼠标指针到球左上角的距离</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//onmousedown</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> shiftX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> ball<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">let</span> shiftY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> ball<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 移动时，将偏移量也纳入考虑</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//onmousemove</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> pageX <span class=\"token operator\">-</span> shiftX <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ball<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> pageY <span class=\"token operator\">-</span> shiftY <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>可放置的目标<br>\n在可拖到元素中，被拖到的元素始终在其他元素之上，因此在较低的元素上设置的处理程序都不会起作用。<br>\n <code>document.elementFromPoint(clientX, clientY)</code>  可以返回在给定窗口相对处嵌套最深的元素，如果同坐标上有多个则返回最上面的一个元素。<br>\n利用这个方法可以改进拖拽：</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 正在飞过的潜在 droppable 元素</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//currentDroppable 用于存储当前放置目标</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">let</span> currentDroppable <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 改进 onMouseMove</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">onMouseMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token function\">moveAt</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 先隐藏拖动的元素，否则获得的是拖到的元素（在最上面）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  ball<span class=\"token punctuation\">.</span>hidden <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">let</span> elemBelow <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">elementFromPoint</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  ball<span class=\"token punctuation\">.</span>hidden <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 边界条件，如果 clientX/clientY 在窗口，拖到对象拖出窗口时</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>elemBelow<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// 潜在可放置对象使用 “droppable” 标记</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">let</span> droppableBelow <span class=\"token operator\">=</span> elemBelow<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".droppable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentDroppable <span class=\"token operator\">!=</span> droppableBelow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 正在飞入或飞出</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentDroppable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\">// 飞出 droppable 元素的相关处理函数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">leaveDroppable</span><span class=\"token punctuation\">(</span>currentDroppable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    currentDroppable <span class=\"token operator\">=</span> droppableBelow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentDroppable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">// 飞入 droppable 元素的相关处理函数</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token function\">enterDroppable</span><span class=\"token punctuation\">(</span>currentDroppable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"指针事件\"><a class=\"markdownIt-Anchor\" href=\"#指针事件\">#</a> 指针事件</h4>\n<p>指针事件是鼠标事件的扩展，用于处理包括鼠标、触控等现代输入方法。<br>\n指针事件具备和鼠标事件完全相同的属性，包括 <code>clientX/Y</code>  和 <code>target</code>  等，还有一些其他属性：</p>\n<ul>\n<li><code>pointerID</code> ：触发当前事件指针的唯一标识符，由浏览器生成的，用于处理多指针的情况</li>\n<li><code>pointerType</code> ：指针设备的类型，字符串。如： <code>mouse</code> 、 <code>pen</code>  或 <code>touch</code></li>\n<li><code>isPrimary</code> ：指针是否为首要指针（如多点触控按下第一根手指时）</li>\n</ul>\n<p>对于多点触控的设备（如平板或手机），每一个触摸都会分配一个 <code>pointerID</code> ，利用 <code>pointerID</code> ，可以追踪到多根正在触碰的手指。第一个触摸相关联的事件总有 <code>isPrimary = true</code> 。</p>\n<p>指针捕获（Pointer capturing）是针对指针事件的一个特性。主要方法是：<br>\n <code>elem.setPointerCapture(pointerID)</code> ：将给定的 <code>pointerID</code>  绑定到 <code>elem</code>  上，在调用后，所有具有相同 <code>pointerID</code>  的指针都将 <code>elem</code>  作为目标，无论 <code>elem</code>  在文档中的实际位置。<br>\n以下情况会移除绑定：</p>\n<ul>\n<li>当 <code>pointerup</code>  或者 <code>pointercancel</code>  事件出现时，绑定会被自动移除</li>\n<li>当 <code>elem</code>  元素从文档中删除后，绑定被移除</li>\n<li><code>elem.releasePointerCapture(pointerID)</code>  调用后，移除绑定</li>\n</ul>\n<p>在一个元素启用触发后， <code>gotpointercapture</code>  会触发。同样的，当绑定被移除后， <code>lostpointercapture</code>  会触发。</p>\n<h3 id=\"键盘与滚动\"><a class=\"markdownIt-Anchor\" href=\"#键盘与滚动\">#</a> 键盘与滚动</h3>\n<ol>\n<li>\n<p>键盘事件<br>\n当按键被按下时，会触发 <code>keydown</code>  事件，按键释放时，触发 <code>keyup</code>  事件。<br>\n事件对象的 <code>key</code>  获取按键字符， <code>code</code>  获取按键代码。<br>\n一般来说： - 字符键的代码为 <code>Key&lt;letter&gt;</code>  - 数字键的代码为 <code>Digit&lt;number&gt;</code>  - 特殊按键代码为特殊按键名字 <code>Enter</code> 、 <code>Tab</code> 、 <code>ShiftRight</code>  等</p>\n<div class=\"note info\">\n<p>大多数键盘事件的默认行为可以被阻止，但是 OS 相关的特殊按键除外（如 alt+F4 关闭浏览器窗口），它们无法通过 JavaScript 进行阻止。</p>\n</div>\n</li>\n<li>\n<p>滚动事件<br>\n <code>scroll</code>  事件允许对页面或元素滚动做出反应。<br>\n通过滚动，可以根据用户在文档中位置显示 / 隐藏其他控件或信息</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scroll\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElmentById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showScroll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"表单与控件\"><a class=\"markdownIt-Anchor\" href=\"#表单与控件\">#</a> 表单与控件</h3>\n<h4 id=\"表单属性和方法\"><a class=\"markdownIt-Anchor\" href=\"#表单属性和方法\">#</a> 表单属性和方法</h4>\n<p>表单是特殊集合 <code>document.forms</code>  的成员</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myForm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">let</span> form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">.</span>myForm<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">/* 获取 name 为 myForm 的表单，也可以使用如下方式：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    let form = document.forms [0]</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    获取文档中的第一个表单</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span>one<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">/* 表单中的元素都可以通过命名的集合 form.elements 来访问到</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    如果有多个名字相同的元素，那么 form.elements [name] 获得的是一个集合</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token comment\">// 表单中的元素，反过来也可以通过 element.form 找到它所处的表单</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>form <span class=\"token operator\">===</span> elem<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"表单控件\"><a class=\"markdownIt-Anchor\" href=\"#表单控件\">#</a> 表单控件</h4>\n<ol>\n<li>\n<p>input 和 textarea<br>\n <code>input.value</code>  或者 <code>input.checked</code>  可以访问 <code>input</code>  控件中的 <code>value</code>  值<br>\n <code>textarea.value</code>  访问 <code>textarea</code>  中的 <code>value</code>  值</p>\n</li>\n<li>\n<p>select 和 option<br>\n <code>select</code>  有以下三个重要属性：</p>\n<ul>\n<li><code>select.options</code> ： <code>option</code>  的子元素的集合</li>\n<li><code>select.value</code> ：当前所选的 <code>option</code>  的值</li>\n<li><code>select.selectedIndex</code> ：当前所选的 <code>option</code>  的编号</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>select<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>apple<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Apple<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>banana<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Banana<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pear<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Pear<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 以下三种操作所作的都是同一件事</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  select<span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>selected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  select<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  select<span class=\"token punctuation\">.</span>selectedIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"focusblur\"><a class=\"markdownIt-Anchor\" href=\"#focusblur\">#</a> focus/blur</h4>\n<p>当元素聚焦时，触发 <code>focus</code>  事件，当元素失去焦点时，触发 <code>blur</code>  事件。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token selector\">.invalid</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token selector\">#error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>请输入邮箱：<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  input<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onblur</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>input<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      input<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      error<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入一个邮箱！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  input<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onfocus</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      error<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>elem.focus()</code>  和 <code>elem.blur()</code>  方法可以设置和移除元素身上的焦点。<br>\n <code>focus</code>  和 <code>blur</code>  不会冒泡，但是可以改在捕获阶段触发，或者使用 <code>focusin/focusout</code>  替代。<br>\n大多数元素支持聚焦，但是可以通过 <code>tabindex</code>  使元素变为可聚焦的。<br>\n <code>document.activeElement</code>  获取当前所聚焦的元素。</p>\n<h4 id=\"表单更新事件\"><a class=\"markdownIt-Anchor\" href=\"#表单更新事件\">#</a> 表单更新事件</h4>\n<ol>\n<li>change<br>\n 当元素更改完成，发生 <code>change</code>  事件</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 当输入完成后，切换到其他地方时，触发 change 事件 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!--select 或者 checkbox/radio 会在选项更新后触发 change 事件 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>options<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>option1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>option2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>\n<p>input<br>\n 每次用户对输入值进行修改后，触发 <code>input</code>  事件。<br>\n只要值改变了， <code>input</code>  事件就会发生，包括语言输入，鼠标粘贴等。</p>\n</li>\n<li>\n<p>cut，copy 和 paste<br>\n 发生在剪切 / 拷贝或者粘贴一个值时。<br>\n使用 <code>event.preventDefault()</code>  可以阻止复制 / 粘贴行为。</p>\n</li>\n</ol>\n<h4 id=\"表单提交\"><a class=\"markdownIt-Anchor\" href=\"#表单提交\">#</a> 表单提交</h4>\n<p>点击 <code>&lt;input type=&quot;submit&quot;&gt;</code>  或在 <code>input</code>  字段中按下回车键，都可以触发 <code>submit</code>  事件。<br>\n如果要手动提交表单可以调用 <code>form.submit()</code>  方法。</p>\n",
            "tags": [
                "前端",
                "JavaScript",
                "BOM",
                "DOM"
            ]
        },
        {
            "id": "https://www.umi.homes/posts/c9b1/",
            "url": "https://www.umi.homes/posts/c9b1/",
            "title": "浏览器环境，Document",
            "date_published": "2022-11-10T08:10:35.000Z",
            "content_html": "<h2 id=\"document\"><a class=\"markdownIt-Anchor\" href=\"#document\">#</a> Document</h2>\n<h3 id=\"浏览器环境\"><a class=\"markdownIt-Anchor\" href=\"#浏览器环境\">#</a> 浏览器环境</h3>\n<p>JavaScript 语言最初是为浏览器创建的，但在经过不断发展后，它已经不局限于浏览器环境中。<br>\n运行 JavaScript 的平台称为<strong>主机</strong>，特定平台的功能称为<strong>主机环境</strong>。<br>\n一个完整的 JavaScript 实现包含了三个部分：核心（ECMAScript）、文档对象模型（DOM）和浏览器对象模型（BOM）。<br>\n文档对象模型（Document Object Model），简称 DOM，将所有页面内容表示为可修改的对象。 <code>document</code>  对象是页面主要的 “入口点”。<br>\n浏览器对象模型（Browser Object Model），简称 BOM，表示由主机环境（如浏览器）提供的用于处理文档（document）之外所有内容的其他对象。<br>\n在 “广义的 HTML” 规范中，DOM 和 BOM 都是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVjLndoYXR3Zy5vcmcv\">它的一部分</span>。</p>\n<h3 id=\"dom-树\"><a class=\"markdownIt-Anchor\" href=\"#dom-树\">#</a> DOM 树</h3>\n<p>HTML 文档的主干是标签（tag）。<br>\n根据 DOM，每个 HTML 标签都是一个对象，嵌套的标签是闭合标签的子标签（children）</p>\n<h4 id=\"一个例子\"><a class=\"markdownIt-Anchor\" href=\"#一个例子\">#</a> 一个例子</h4>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>这个 HTML 文档的 DOM 基本如下：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">flowchart</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>html <span class=\"token arrow operator\">--></span> head</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>html <span class=\"token arrow operator\">--></span> body</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>head <span class=\"token arrow operator\">--></span> meta</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>head <span class=\"token arrow operator\">--></span> title</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>body <span class=\"token arrow operator\">--></span> h1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>body <span class=\"token arrow operator\">--></span> p1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>body <span class=\"token arrow operator\">--></span> p2</pre></td></tr></table></figure><p>每个树的节点都是一个对象。如 <code>&lt;html&gt;</code>  是根节点， <code>&lt;head&gt;</code>  和 <code>&lt;body&gt;</code>  是其子节点，它们之中又有其他子节点。<br>\n标签被称为元素节点，元素内的节点形成文本节点。文本节点被标记为 <code>#text</code> ，一个文本节点只包含一个字符串，它没有子项并总是叶子节点。</p>\n<div class=\"note info\">\n<p>元素之间的换行和空格也会被列为文本节点，如 <code>&lt;head&gt;</code>  后， <code>&lt;body&gt;</code>  前的一个换行符。<br>\n通常情况下，因为它们无关紧要并通常不会影响文档显示方法，一些工具都会把它们隐藏。</p>\n</div>\n<h4 id=\"一些规范\"><a class=\"markdownIt-Anchor\" href=\"#一些规范\">#</a> 一些规范</h4>\n<ul>\n<li><code>&lt;head&gt;</code>  标签之前的空格和换行符均会被忽略，根据规范，如果在 <code>&lt;body&gt;</code>  之后放置了其他内容，它也会被移到 <code>&lt;body&gt;</code>  标签内的最下方</li>\n<li>遇到不正确的 HTML，在形成 DOM 时会自动更正它。如：\n<ul>\n<li><code>&lt;html&gt;</code>  始终应该是根节点，如果 HTML 文档中缺少它，浏览器会自动创建它作为根节点</li>\n<li>没有关闭的标签也会关闭形成一个正常的节点</li>\n<li>表格 <code>&lt;table&gt;</code>  会自动创建 <code>&lt;tbody&gt;</code></li>\n</ul>\n</li>\n<li>HTML 中所有内容，连同注释都会成为 DOM 的一部分，注释也是一种节点</li>\n<li>整个文档的 <code>document</code> ，甚至 <code>&lt;!DOCTYPE html&gt;</code>  指令也是一个 DOM 节点，规范中的节点一共有 12 种类型</li>\n</ul>\n<h3 id=\"dom-的结构\"><a class=\"markdownIt-Anchor\" href=\"#dom-的结构\">#</a> DOM 的结构</h3>\n<p>对 DOM 的所有操作都是以 <code>document</code>  对象开始的，它的 DOM 的 “入口”。<br>\n最顶层的树节点（即 <code>html</code>  节点）可以直接作为 <code>document</code>  的属性来使用。<br>\n <code>&lt;html&gt;</code>  =  <code>document.documentElement</code> ，这是最顶层 DOM 节点，也即 <code>&lt;html&gt;</code>  标签。<br>\n <code>&lt;head&gt;</code>  和 <code>&lt;body&gt;</code>  标签也是常访问的节点，分别可以使用 <code>document.head</code>  和 <code>document.body</code>  访问到。</p>\n<h4 id=\"子节点与子孙节点\"><a class=\"markdownIt-Anchor\" href=\"#子节点与子孙节点\">#</a> 子节点与子孙节点</h4>\n<p>子节点（childNodes）通常是对应直系子元素，子孙节点是嵌套元素中的所有元素，包括子节点和子节点的子节点。</p>\n<ul>\n<li><code>childNodes</code>  可以访问到包括文本节点在内的所有子节点</li>\n<li><code>firstChild</code>  和 <code>lastChild</code>  是访问第一个和最后一个子节点的方法</li>\n<li><code>hasChild</code>  方法可以判断是否具有子节点</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token comment\">//childNodes 返回一个类数据的可迭代对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><code>childNodes</code>  返回一个类数据的可迭代 DOM 集合，既可以使用 <code>for..of</code>  来迭代，也可以使用 <code>Array.from</code>  把它转变成一个真正的数组。<br>\nDOM 集合有两个性质，一是 DOM 集合是<strong>只读的</strong>，二是 DOM 集合是<strong>实时的</strong>。</p>\n<h4 id=\"兄弟节点和父节点\"><a class=\"markdownIt-Anchor\" href=\"#兄弟节点和父节点\">#</a> 兄弟节点和父节点</h4>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">flowchart</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>html <span class=\"token arrow operator\">--></span> head</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>html <span class=\"token arrow operator\">--></span> body</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>head <span class=\"token arrow operator\">--></span> meta</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>head <span class=\"token arrow operator\">--></span> title</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>body <span class=\"token arrow operator\">--></span> h1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>body <span class=\"token arrow operator\">--></span> p1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>body <span class=\"token arrow operator\">--></span> p2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&lt;!<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span> <span class=\"token label property\">```</span> <span class=\"token arrow operator\">--></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>在这个 DOM 树中，`&lt;h1<span class=\"token text string\">>`标签和`&lt;p>`标签互为兄弟节点，`&lt;body></span>`标签是它们的父节点。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>- `nextSibling`和`previousSibling`可以方便访问下一个兄弟节点和上一个兄弟节点</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>- `parentNode`访问父节点</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>#### 访问元素</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>正如之前介绍，所有 HTML 内容都会称为 DOM 的一部分，节点中也包含了文本节点和注释节点，而多数情况下，需要访问的仅仅是元素节点。这些方法是访问元素节点方法：</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>- `children`：所有子元素节点</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>- `firstElementChild`和`lastElementChild`：第一个和最后一个子元素节点</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>- `nextElementSibling`和`previousElementSibling`：下一个和下一个兄弟元素节点</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>- `parentElement`：父元素节点</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>#### 搜索方法</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>- `document.getElementById<span class=\"token text string\">(id)</span>`，对于具有`id`属性的元素获取该元素，因为`id`是全页面独一无二的</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>- `querySelectorAll<span class=\"token text string\">(selector)</span>`，返回与给定 CSS 选择器相匹配的所有元素</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>- `querySelector<span class=\"token text string\">(selector)</span>`，返回给定 CSS 选择器相匹配的第一个元素，按嵌套顺序从外层到内部</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>- `matches<span class=\"token text string\">(selector)</span>`，检查元素是否与给定 CSS 选择器相匹配，返回`true/false`</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>- `closest<span class=\"token text string\">(selector)</span>`，查找并返回给定 CSS 选择器相匹配的第一个祖先，元素自己也会被搜索。</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>- `getElementsByName`、`getElementsByClassName`、`getElementsByTagName`，分别按照`name`，`tag`和`class`查找符合的元素并返回一个**可迭代的类数组对象**</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>比较`querySelectorAll`与`getElementBy*`方法：</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>- 两者返回的都是一个可迭代的类数组对象，不同的是`querySelectorAll`方法中返回的是静态的——它不会随着文档元素的更新而变化，而`getElementBy*`方法返回的是动态的对象，会实时反应文档元素的变化。</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>- `querySelectorAll`方法更灵活，写法也更多，现在的使用情况更多。</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>### 节点属性</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>#### DOM 节点类</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>每个 DOM 节点都属于相应的内建类。在层次结构中，根节点是`EventTarget`，`Node`继承自它，其他节点又全继承于`Node`。</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>```mermaid</pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">flowchart</span> BT</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>HTMLInputElement <span class=\"token arrow operator\">--></span> HTMLElement</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>HTMLBodyElement <span class=\"token arrow operator\">--></span> HTMLElement</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>HTMLAnchorElement <span class=\"token arrow operator\">--></span> HTMLElement</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>HTMLElement <span class=\"token arrow operator\">--></span> Element</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>HTMLDocument <span class=\"token arrow operator\">--></span> Document</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Text <span class=\"token arrow operator\">--></span> CharacterData</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>Comment <span class=\"token arrow operator\">--></span> CharacterData</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>CharacterData <span class=\"token arrow operator\">--></span> Node</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>Element <span class=\"token arrow operator\">--></span> Node</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>Document <span class=\"token arrow operator\">--></span> Node</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>Node <span class=\"token arrow operator\">--></span> EventTarget</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>```</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>- `EventTarget`：一切的根抽象（abstract）类，该类的对象从未被创建，它是为了让所有 DOM 节点都能支持事件（event）</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>- `Node`：一个抽象类，`Node`类的对象从未创建，但是它提供了 DOM 树的核心功能，是所有 DOM 节点的基础</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>- `CharacterData`：一个抽象类，被`Text`（元素内部文本的类）和`Comment`（注释类）继承</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>- `Document`：被`HTMLDocument`继承，作为全局`document`的 DOM 入口</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>- `Element`：DOM 元素的基础类，提供元素级导航方法和搜索方法，`Element`为 XML 和 SVG 等更具体类提供基础</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>- `HTMLElement`：是所有 HTML 元素的基础类，被其他更具体的 HTML 元素继承</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>一个普通的 DOM 元素节点，它的全部属性和方法都是继承链的结果，并且追根溯源，继承自`Object`，因此对象的方法也是有效的：</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>```javascript</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>alert<span class=\"token text string\">(document.body.constructor.name)</span><span class=\"token punctuation\">;</span> //HTMLBodyElement</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>alert<span class=\"token text string\">(document.body)</span><span class=\"token punctuation\">;</span> //toString方法，<span class=\"token text string\">[object HTMLBodyElement]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>//通过instanceof检查继承也是可以的</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>alert<span class=\"token text string\">(document.body instanceof HTMLBodyElement)</span><span class=\"token punctuation\">;</span> //true</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>console.log<span class=\"token text string\">(elem)</span><span class=\"token punctuation\">;</span> //显示元素的DOM树</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>console.dir<span class=\"token text string\">(elem)</span><span class=\"token punctuation\">;</span> //将元素显示为DOM对象</pre></td></tr></table></figure><h4 id=\"常见节点属性\"><a class=\"markdownIt-Anchor\" href=\"#常见节点属性\">#</a> 常见节点属性</h4>\n<ol>\n<li>\n<p>nodeType<br>\n <code>nodeType</code>  提供了一种获得 DOM 节点类型的方法，它返回一个数值型值。</p>\n<ul>\n<li>对于元素节点， <code>elem.nodeType == 1</code></li>\n<li>对于文本节点， <code>elem.nodeType == 3</code></li>\n<li>对于 <code>document</code>  对象， <code>elem.nodeType == 9</code> ，… 还有其他节点对应的数值</li>\n</ul>\n</li>\n<li>\n<p>nodeName 和 tagName<br>\n <code>tagName</code>  仅针对元素节点，返回标签名， <code>nodeName</code>  适用于所有 <code>Node</code> ，在读取元素节点时，它们相同。</p>\n</li>\n<li>\n<p>innerHTML<br>\n <code>innerHTML</code>  属性将元素中的 HTML 获取为字符串形式，通过它可以更改页面。<br>\n <code>innerHTML +=</code>  会进行<strong>完全的重写</strong>：先移除全部旧的内容，再用添加了新内容的 HTML 重写页面，<strong>页面全部的图片和其他资源都需要重新加载。</strong></p>\n</li>\n<li>\n<p>outerHTML<br>\n <code>outerHTML</code>  属性包含了元素完整的 HTML，等同于 <code>innerHTML</code>  加上元素本身。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>elem<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Hello!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!--...--></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Hello!</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//&lt;div id=\"elem\">Hello!&lt;/div></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>和 <code>innerHTML</code>  不同，写入 <code>outerHTML</code>  不会改变元素，而是在 DOM 中替换掉它。<br>\n <code>div.outerHTML = ...</code>  会将旧的标签从文档中移除，然后将另一个新的 HTML 片段插入到它的位置上，<strong>原来的标签仍然具有其旧的值</strong>。</p>\n</li>\n<li>\n<p>nodeValue/data<br>\n 文本节点内容，读取文本节点的信息， <code>innerHTML</code>  属性是只适应于元素节点的。</p>\n</li>\n<li>\n<p>textContent<br>\n 访问元素内部的纯文本内容，所有标签都会被去掉。<br>\n<strong>写入 <code>textContent</code>  比写入 <code>innerHTML</code>  安全得多</strong>，所有符号都会按字符串处理而不会被当作 HTML 片段。</p>\n</li>\n<li>\n<p>hidden<br>\n 当设置为 <code>true</code>  时，与 CSS 的 <code>display: none</code>  执行相同的事。</p>\n</li>\n</ol>\n<h4 id=\"特性与属性\"><a class=\"markdownIt-Anchor\" href=\"#特性与属性\">#</a> 特性与属性</h4>\n<p>页面加载时，会解析 HTML 并从中生成 DOM 对象，大多数标准 HTML 的特性（attributes）会自动变成 DOM 对象的属性（properties）。<br>\n例如 <code>&lt;body id = &quot;page&quot;&gt;&lt;/body&gt;</code>  的 DOM 对象就会有 <code>body.id = &quot;page&quot;</code> ，但是特性与属性并不是一一对应的，有些情况下它们也会有所区别。</p>\n<ol>\n<li>\n<p>DOM 属性<br>\n因为 DOM 是对象，所以按照一般对象的操作对它来说都是可行的，包括创建新属性，添加方法等。</p>\n<ul>\n<li>属性的值可以有不同的数据类型</li>\n<li>属性是大小写敏感的</li>\n</ul>\n</li>\n<li>\n<p>HTML 特性<br>\n HTML 标签可能会拥有特性，当进行解析时，标准的特性会被创建为 DOM 对象的属性一一对应，非标准的特性不会。</p>\n<ul>\n<li>特性的值总是字符串类型</li>\n<li>特性是大小写不敏感的</li>\n<li>设置的特性在 <code>outerHTML</code>  都是可见的</li>\n</ul>\n<pre><code class=\"language-HTML\">&lt;body&gt;\n  &lt;div id=&quot;elem&quot; about=&quot;Element&quot;&gt;&lt;/div&gt;\n\n  &lt;script&gt;\n    let odiv = document.getElementById('elem');\n    alert(odiv.id); //'elem'\n    alert(odiv.about);  //undefined\n\n    //对于特性，可以使用以下方法进行访问\n    alert(odiv.hasAttribute('ABOUT')); //hasAttribute(name)，检查特性存在，特性名大小写不敏感\n    alert(odiv.getAttribute('about')); //getAttribute(name)，返回特性值\n    odiv.setAttribute('test', 5); //setAttribute(name, value)，设置特性值\n    alert(typeof(odiv.getAttribute('test')))  //string，特性值总是字符串类型\n    odiv.removeAttribute('test'); //removeAttribute(name)，移除这个特性值\n\n    //elem.attributes方法获取所有属性，并返回一个集合，具有name和value属性\n    console.log(odiv.attributes);\n    //返回：NamedNodeMap &#123;0: id, 1: about, id: id, about: about, length: 2&#125;\n  &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n<p>当一个标准的特性被改变，对应的属性也会自动更新，（除了几个特例）反之亦然。<br>\n一些值只允许特性到属性的改变，改变属性值不会改变特性值，因为这些属性值可能与用户行为有关，是为了防止用户改变特性值。</p>\n</li>\n<li>\n<p>非标准特性<br>\n所有以 <code>date-*</code>  开头的特性都被保留给程序员使用，以避免冲突，它们可以在 <code>dataset</code>  中使用。<br>\n使用 <code>data-*</code>  特性是一种合法且安全的传递自定义数据的方式。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>elem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-about</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Element<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-order-state</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> odiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>odiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>about<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Element，对 data-* 属性，可以用 dataset.* 取得</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>odiv<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>orderState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//new，多字词特性，使用驼峰式调用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"修改文档\"><a class=\"markdownIt-Anchor\" href=\"#修改文档\">#</a> 修改文档</h2>\n<h3 id=\"修改文档的方法\"><a class=\"markdownIt-Anchor\" href=\"#修改文档的方法\">#</a> 修改文档的方法</h3>\n<ol>\n<li>\n<p>创建节点</p>\n<ul>\n<li><code>document.createElement(tag)</code> ：用给定标签创建一个元素节点</li>\n<li><code>document.createTextNode(value)</code> ：创建一个文本节点</li>\n<li><code>elem.cloneNode(deep)</code> ：克隆元素， <code>deep = true</code>  则连同后代一起克隆</li>\n</ul>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个元素节点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> div <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>div<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>div<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;strong>Hello!&lt;/strong>\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>插入方法</p>\n<ul>\n<li><code>node.append(nodes/strings)</code> ：在节点末尾插入</li>\n<li><code>node.prepend(nodes/strings)</code> ：在节点开头插入</li>\n<li><code>node.before(nodes/strings)</code> ：在节点之前插入</li>\n<li><code>node.after(nodes/strings)</code> ：在节点之后插入</li>\n<li><code>node.replaceWith(nodes/strings)</code> ：替换节点</li>\n<li><code>node.remove()</code> ：移除节点</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 以元素节点 ul 为例 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!--before 的位置 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">&lt;!--prepend 的位置 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">&lt;!--append 的位置 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">&lt;!--after 的位置 --></span></pre></td></tr></table></figure><p>这种方法插入的只能是节点或者是字符串，即使是 <code>node.append(&lt;p&gt;&lt;/p&gt;)</code>  这种形式，其中的文本也全部都会作为字符串插入。<br>\n如果插入已经存在页面的一个节点，节点会自动从原本的位置被删除，而插入到新的位置。</p>\n<p><code>elem.insertAdjacentHTML(where, html)</code>  方式可以插入一段 HTML 字符串。<br>\n第一个参数确定插入的位置，第二个参数中的字符串全都会作为 HTML 插入。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--where 的关键词 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!--beforebegin 的位置 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">&lt;!--afterbegin 的位置 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">&lt;!--beforeend 的位置 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">&lt;!--afterend 的位置 --></span></pre></td></tr></table></figure></li>\n<li>\n<p>DocumentFragment<br>\n <code>DocumentFragment</code>  方法是一个特殊的 DOM 节点，用来传递节点列表的包装器（wrapper）。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ul<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">getListContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">let</span> fragment <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      li<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      fragment<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> fragment<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  ul<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getListContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 附加上了 DocumentFragment</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>insert/remove</p>\n<ul>\n<li><code>parentElem.appendChild(node)</code> ：将 <code>node</code>  附件为 <code>parentElem</code>  最后一个子元素</li>\n<li><code>parentElem.insertBefore(node, nextSibling)</code> ：在 <code>parentElem</code>  的 <code>nextSibling</code>  前插入 <code>node</code></li>\n<li><code>parentElem.removeChild(node)</code> ：从 <code>parentElem</code>  中删除子元素 <code>node</code></li>\n<li><code>parentElem.replaceChild(newElem, node)</code> ：将 <code>parentElem</code>  后代中的 <code>node</code>  替换成 <code>newElem</code></li>\n<li><code>document.write(html)</code> ：马上向页面写入 HTML 片段</li>\n</ul>\n<p><code>document.write(html)</code> <strong> 不涉及 DOM 修改，且只在页面加载时工作</strong>。<br>\n其他的操作 DOM 的方法在实际开发中已经可以用更新的方式替换。</p>\n</li>\n</ol>\n<h3 id=\"样式和类\"><a class=\"markdownIt-Anchor\" href=\"#样式和类\">#</a> 样式和类</h3>\n<p>JavaScript 既可以修改 CSS 类，也可以修改 <code>style</code>  属性，但是 CSS 类应该是修改样式时的第一选择，仅当类无法处理时才应该考虑修改 <code>style</code>  样式。</p>\n<h4 id=\"classname-和-classlist\"><a class=\"markdownIt-Anchor\" href=\"#classname-和-classlist\">#</a> className 和 classList</h4>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main page<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//className 对应 class 属性，可以读取更改 class</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//main page</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/*classList 是一个特殊的对象，它具有单个的 add/remove/toggle 方法</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      当需要添加、修改、删除类的时候，它具有更多的灵活性</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        add|remove (class)，添加 | 删除一个 class</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        toggle (class)，如果一个类不存在则添加它，如果存在就删除它</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        contains (class)，检查是否存在类，返回 true|false</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//main page article</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"元素样式\"><a class=\"markdownIt-Anchor\" href=\"#元素样式\">#</a> 元素样式</h4>\n<p><code>elem.style</code>  属性是一个对象，对应 <code>style</code>  中的内容。<br>\n <code>elem.style.width</code>  或 <code>elem.style.backgroundColor</code> ，多词使用驼峰式写法。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>elem<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Hello!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 置空字符串，恢复默认状态，CSS 类或者内建样式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//elem.style.removeProperty ('style property')，删除一个属性</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//style.cssText 可以完全重写一个样式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">color: red;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      background-color: yellow;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      width: 100px;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"读取样式\"><a class=\"markdownIt-Anchor\" href=\"#读取样式\">#</a> 读取样式</h4>\n<p><code>getComputedStyle(element, [pseudo])</code>  方法可以获取具有样式属性的对象，这里获得的是最终元素的解析属性。</p>\n<div class=\"note info\">\n<p>计算（computed）样式是所有 CSS 规则和 CSS 继承都运用后的结果。<br>\n解析（resolved）样式是最终应用于元素的样式值。<br>\n <code>getComputedStyle</code>  中返回的是解析值。</p>\n</div>\n<h3 id=\"元素大小和滚动\"><a class=\"markdownIt-Anchor\" href=\"#元素大小和滚动\">#</a> 元素大小和滚动</h3>\n<ul>\n<li>\n<p><code>offsetParent</code>  和 <code>offsetLeft/Top</code> <br>\n <code>offsetParent</code>  是最接近的祖先元素，浏览器渲染期间用它来计算坐标，优先级按 CSS 中定位标准。<br>\n <code>offsetLeft/Top</code>  提供元素相对祖先元素左上角的 X/Y 方向的位移坐标。<br>\n对 <code>body/html</code>  标签， <code>offsetParent</code>  的值为 <code>null</code> 。</p>\n</li>\n<li>\n<p><code>offsetWidth/Height</code> <br>\n 元素外部的宽度和高度，元素的完整大小（包含边框）。<br>\n如果一个元素未显示，则其为 0。其 <code>offsetParent</code>  值为 <code>null</code> 。</p>\n</li>\n<li>\n<p><code>clientTop/Left</code>  和 <code>clientWidth/Height</code> <br>\n <code>clientTop/Left</code>  是元素上边框和左边框的宽度，当有边框时会包括边框的宽度。<br>\n <code>clientWidth/Height</code>  是元素边框内区域大小，等同于 <code>content</code> + <code>padding</code>  区域。</p>\n</li>\n<li>\n<p><code>scrollWidth/Height</code>  和 <code>scrollLeft/scrollTop</code> <br>\n <code>scrollWidth/Height</code>  是内容区域完整的大小，包含滚动出去的部分。<br>\n <code>scrollLeft/scrollTop</code>  是元素隐藏，滚动部分的，即已经滚动了多少。</p>\n</li>\n</ul>\n<h3 id=\"窗口大小和滚动\"><a class=\"markdownIt-Anchor\" href=\"#窗口大小和滚动\">#</a> 窗口大小和滚动</h3>\n<h4 id=\"窗口大小\"><a class=\"markdownIt-Anchor\" href=\"#窗口大小\">#</a> 窗口大小</h4>\n<ul>\n<li><code>document.documentElement.clientHeight</code> ：获取当前窗口的高度</li>\n<li><code>document.documentElement.clientWidth</code> ：获取当前窗口的宽度</li>\n<li><code>window.innerWidth/innerHeight</code> ：属性值的宽 / 高包括了滚动条占用的部分</li>\n</ul>\n<p>整个文档（document）的 <code>width/height</code> （包括滚动出去的部分）可以用下面方法获取：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> scrollHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"文档滚动\"><a class=\"markdownIt-Anchor\" href=\"#文档滚动\">#</a> 文档滚动</h4>\n<ul>\n<li><code>window.pageXOffset</code> ：水平方向（从左侧开始）的滚动距离</li>\n<li><code>window.pageYOffset</code> ：垂直方向（从顶部开始）的滚动距离<br>\n这两个名称分别也是 <code>window.scrollX</code>  和 <code>window.scrollY</code>  的别名。</li>\n</ul>\n<div class=\"note info\">\n<p>必须要在 DOM 完全构建好之后才能通过 JavaScript 滚动页面，否则它不会正常工作。</p>\n</div>\n<ul>\n<li>\n<p><code>window.scrollBy(x, y)</code> ：将页面滚动到相对于当前位置 <code>x</code>  和 <code>y</code>  的距离，单位是 <code>px</code></p>\n</li>\n<li>\n<p><code>window.scrollTo(x, y)</code> ：将页面滚动到绝对坐标，相当于分别设置 <code>(pageX, pageY)</code></p>\n</li>\n<li>\n<p><code>elem.scrollIntoView(top)</code> ：将页面滚动使其顶端与 <code>elem</code>  顶端对齐， <code>top</code>  取值为 <code>false</code>  则会将元素顶端于页面底部对齐</p>\n<p>设置 <code>document.body.style.overflow = &quot;hidden&quot;</code>  禁止页面滚动，去除这个属性恢复页面滚动。</p>\n</li>\n</ul>\n<h3 id=\"坐标\"><a class=\"markdownIt-Anchor\" href=\"#坐标\">#</a> 坐标</h3>\n<p>元素坐标有两种：</p>\n<ul>\n<li><code>clientX/Y</code> ：相对于窗口，类似 <code>position:fixed</code></li>\n<li><code>pageX/Y</code> ：相对于文档，类似 <code>position:absolute</code></li>\n</ul>\n<h4 id=\"窗口坐标\"><a class=\"markdownIt-Anchor\" href=\"#窗口坐标\">#</a> 窗口坐标</h4>\n<p><code>elem.getBoundingClientRect()</code>  返回最小矩形的窗口坐标， <code>elem</code>  作为内建 <code>DOMRect</code>  类的对象。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 返回 DOMRect 对象中有以下属性</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DOMRect &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  width|height：矩形的 width|height</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  x|y：矩形原点相对于窗口的 X|Y 坐标</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  派生属性：</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    top|bottom：顶部 | 底部矩形边缘的 Y 坐标，top = y，bottom = y + height</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    left|right：左 | 右矩形边缘的 X 坐标，left = x，right = x + width</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr></table></figure><p>与 CSS 中不同，JavaScript 中 right 和 bottom 不是表示从右或者底开始计算，<strong>元素所有坐标都是从左上角开始计算的</strong>。<br>\n <code>document.elementFromPoint(x, y)</code>  会返回在窗口坐标内嵌套最多的元素，因为是窗口坐标，所以元素可能会随着窗口滚动变化，对于窗口之外的坐标会返回 <code>null</code> 。<br>\n文档坐标可以结合固定定位使用。</p>\n<h4 id=\"文档坐标\"><a class=\"markdownIt-Anchor\" href=\"#文档坐标\">#</a> 文档坐标</h4>\n<p>JavaScript 没有直接获取文档坐标的方法，但文档坐标可以与窗口坐标建立关联：</p>\n<ul>\n<li><code>pageX</code>  =  <code>clientX</code>  + 文档水平滚动出的部分的宽度</li>\n<li><code>pageY</code>  =  <code>clientY</code>  + 文档垂直滚动出的部分的高度</li>\n</ul>\n<p>文档坐标可以结合绝对定位使用。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取元素的文档坐标</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getCoords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>right <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>pageXOffset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">bottom</span><span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> box<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>pageXOffset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaScript",
                "BOM",
                "DOM"
            ]
        }
    ]
}